{"version":3,"sources":["i18n.js","store/core/action-types.js","store/core/reducer.js","store/current/action-types.js","store/current/reducer.js","store/reducer.js","utils/localStorage/index.js","store/initial-state.js","store/index.js","components/menu/language-selector/index.js","components/menu/menu.js","utils/api/index.js","store/core/actions.js","components/session/login/index.js","components/session/signout/index.js","components/protected/index.js","components/protected/admin.js","components/protected/checkRedirect.js","components/protected/checkSession.js","store/current/actions.js","components/table/pagination/index.js","components/table/index.js","components/admin/index.js","components/client/index.js","components/admin/client/index.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","CoreReducer","state","type","payload","types","isAuthenticated","user","CurrentReducer","reducer","action","core","current","instance","saveToken","token","setItem","deleteToken","removeItem","getUserInfo","getItem","userInfo","jwt_decode","key","item","localStorage","this","_pag","ls","_ct","initialInfo","getInitialInfo","pagination","records","logger","createLogger","setStore","createStore","combinedReducers","initialState","compose","applyMiddleware","LanguageSelector","useTranslation","t","initLanguage","useCallback","lan","changeLanguage","useEffect","NavDropdown","bg","title","icon","faGlobeAmericas","id","onSelect","Dropdown","Item","lang","eventKey","connect","isAdmin","admin","Navbar","sticky","Toggle","aria-controls","Collapse","Nav","Link","as","to","url","pass","axios","post","password","md5","res","headers","authorization","split","console","error","email","page","get","status","data","uid","saveUserInfo","signout","coreActions","userRef","useState","setError","loading","setLoading","history","useHistory","label","labelBottom","loginURL","passRef","handleKeyDown","e","handleSubmit","a","value","api","adminLogin","userLogin","replace","bgColor","spinnerColor","textColor","text","Form","Group","className","Control","ref","input","onKeyDown","size","autoComplete","placeholder","faExclamationCircle","Button","variant","onClick","CoreActions","isClient","children","rest","render","location","pathname","from","secret","saveCurrentInfo","info","jwt","encode","Pag","totalPages","options","path","Pagination","Ellipsis","active","ReTable","columns","content","order","thead","map","cb","desc","sort","faLongArrowAltDown","faLongArrowAltUp","tbody","index","Object","keys","it","yesno","dc","amount","x","toString","currency","date","Date","dd","getDate","mm","getMonth","yy","getFullYear","checkItem","Table","responsive","striped","bordered","hover","CurrentActions","p","useParams","Number","isNaN","setPage","setTotalPages","setOrder","clients","setClients","updateTable","getUserList","userList","cl","name","nombre","segundo_nombre","apellido","segundo_apellido","fetchClients","handleSort","sortedArray","b","movements","setMovements","setCurrency","client","setClient","fetchClientMovements","getMyMovements","mov","getCurrencyConversion","m","mxn","usd2mxn","toFixed","usd","description","created_at","newArray","find","getClientMovements","App","exact","Boolean","window","hostname","match","ReactDOM","fallback","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.63cc2cf3.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport { initReactI18next } from 'react-i18next'\n\ni18n\n    .use(Backend)\n    .use(initReactI18next)\n    .init({\n        lng: 'en',\n        backend: {\n            loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\n        },\n        fallbackLng: 'en',\n        debug: true,\n        ns: ['translations'],\n        defaultNS: 'translations',\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false,\n            formatSeparator: ','\n        },\n        react: {\n            wait: true\n        }\n    });\n\nexport default i18n\n","export default {\n    USER_AUTHENTICATE : \"USER_AUTHENTICATE\",\n    USER_SIGNOUT      : \"USER_SIGNOUT\"\n};\n","import types from './action-types';\n\nconst CoreReducer = (state = {}, { type, payload }) => {\n    switch(type) {\n        case types.USER_AUTHENTICATE:\n            return {\n                ...state,\n                isAuthenticated: true,\n                user: {\n                    ...payload\n                }\n            }\n        case types.USER_SIGNOUT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: {}\n            }\n        default:\n            return state;\n    }\n};\n\nexport default CoreReducer;\n","export default {\n    SAVE_CURRENT_INFO: \"SAVE_CURRENT_INFO\"\n};\n","import types from './action-types';\n\nconst CurrentReducer = (state = {}, { type, payload }) => {\n    switch(type) {\n        case types.SAVE_CURRENT_INFO:\n            return {\n                ...state,\n                ...payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default CurrentReducer;\n","import CoreReducer from './core/reducer';\nimport CurrentReducer from './current/reducer'\n\nconst reducer = (state = {}, action) => {\n    return {\n        core: CoreReducer(state.core, action),\n        current: CurrentReducer(state.current, action)\n    };\n};\n\nexport default reducer;\n","import jwt_decode from 'jwt-decode';\n\nclass LocalStorage {\n    instance = null;\n\n    constructor () {\n        if(this.instance !== null) {\n            return this.instance\n        }\n\n        this.instance = this;\n        return this.instance;\n    }\n\n    saveToken = (token) => {\n        this.setItem('_ut', token);\n    }\n\n    deleteToken = () => {\n        this.removeItem('_ut');\n    }\n\n    getUserInfo = () => {\n        const token = this.getItem('_ut');\n        \n        if(token === '' || token === null) {\n            return null;\n        }\n\n        const userInfo = jwt_decode(token);\n        userInfo.token = token;\n\n        return userInfo;\n    }\n\n    get token() {\n        return this.getItem('_ut');\n    }\n\n    // These two methods are made to keep using the LocalStorage class instead of localStorage alone\n    // In a way of 'extending' localStorage and keep using the same instance of the class\n    setItem = (key = \"\", item = \"\") => {\n        return localStorage.setItem(key, item)\n    }\n\n    removeItem = (key = \"\") => {\n        return localStorage.removeItem(key);\n    }\n\n    getItem = (key = \"\") => {\n        return localStorage.getItem(key);\n    }\n};\n\nexport default new LocalStorage();\n","import jwt_decode from 'jwt-decode';\n\nimport ls from '../utils/localStorage';\n\nconst getInitialInfo = () => {\n    const initialInfo = {\n        user: ls.getUserInfo()\n    }\n\n    initialInfo.isAuthenticated = initialInfo.user !== null;\n\n    return initialInfo;\n};\n\nconst _pag = ls.getItem('_pag');\nconst _ct = ls.getItem('_ct');\n\nexport default {\n    core: {\n        ...getInitialInfo()\n    },\n    current: {\n        pagination: _pag ? jwt_decode(_pag) : {},\n        records: _ct ? jwt_decode(_ct) : {}\n    }\n};\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\n\nimport combinedReducers from './reducer';\nimport initialState from './initial-state';\n\nconst logger = createLogger();\n\nconst currentStore = null;\n\nconst setStore = () => {\n    if(currentStore !== null) {\n        return currentStore;\n    }\n        \n    const store = createStore(\n        combinedReducers, \n        initialState,\n        compose(\n            applyMiddleware(logger)\n        )\n    );\n\n    return store;\n}\n\nexport default setStore();\n","import React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { faGlobeAmericas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport ls from '../../../utils/localStorage';\n\nimport './language-selector.scss';\n\nconst LanguageSelector = () => {\n    const { t, i18n } = useTranslation();\n\n    const initLanguage = useCallback(() => {\n        const lan = ls.getItem('lan');\n        if(lan !== '' || lan !== null) {\n            i18n.changeLanguage(lan);\n        }\n    }, [i18n]);\n\n    useEffect(() => {\n        initLanguage();\n    }, [initLanguage]);\n\n    const changeLanguage = (lan) => {\n        i18n.changeLanguage(lan);\n        ls.setItem('lan', lan);\n    }\n\n    return (\n        <NavDropdown bg=\"dark\" title={<FontAwesomeIcon icon={faGlobeAmericas} />} id=\"language-selector\" onSelect={changeLanguage}>\n            <Dropdown.Item lang=\"en\" eventKey=\"en\">{ t('english.label') }</Dropdown.Item>\n            <Dropdown.Item lang=\"es-MX\" eventKey=\"es-MX\">{ t('spanish.label') }</Dropdown.Item>\n        </NavDropdown>\n    );\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './menu.scss';\n\nimport LanguageSelector from './language-selector';\n\nconst Menu = ({ isAuthenticated, isAdmin }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Navbar bg='dark' sticky=\"top\" id=\"main-menu\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav.Item>\n            {\n              isAuthenticated && isAdmin ? (\n                <Nav.Link as={Link} to=\"/admin\">{t('users.label')}</Nav.Link>\n              ) : null\n            }\n          </Nav.Item>\n          <Nav.Item>\n            {\n              isAuthenticated ? (\n                <Nav.Link as={Link} to=\"/signout\">{t('signout.label')}</Nav.Link>\n              ) : (\n                <Nav.Link as={Link} to=\"/login\">{t('login.label')}</Nav.Link>\n              )\n            }\n          </Nav.Item>\n          <LanguageSelector />\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ core }) => {\n  return {\n    isAuthenticated: core.isAuthenticated,\n    isAdmin: core.user ? core.user.admin : false\n  }\n}\n\nexport default connect(mapStateToProps)(Menu);\n","import axios from 'axios';\nimport md5 from 'md5';\nimport jwt_decode from 'jwt-decode';\n\nclass API {\n    instance = null;\n\n    constructor() {\n        if(this.instance !== null) {\n            return this.instance;\n        }\n        \n        this.url = 'https://prueba-resuelve.herokuapp.com';\n\n        this.instance = this;\n        return this.instance;\n    }\n\n    async adminLogin(user, pass) {\n        try {\n            const res = await axios.post(`${this.url}/users/adminLogin`, {\n                user: user,\n                password: md5(pass)\n            });\n\n            if(res.headers.authorization) {\n                const { authorization } = res.headers;\n                let token = authorization.split(\" \");\n                token = token[1];\n\n                return { ...jwt_decode(token), token };\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async userLogin(user, pass) {\n        try {\n            const res = await axios.post(`${this.url}/users/login`, {\n                email: user,\n                password: md5(pass)\n            });\n\n            if(res.headers.authorization) {\n                const { authorization } = res.headers;\n                let token = authorization.split(\" \");\n                token = token[1];\n\n                return { ...jwt_decode(token), token };\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async getUserList(token, page = \"\") {\n        try {\n            const res = await axios.get(`${this.url}/users/list?page=${page}`, {\n                headers: { \"Authorization\": `Bearer ${token}` }\n            });\n\n            if(res.status === 200) {\n                return res.data;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async getClientMovements(token, uid, page = \"\") {\n        try {\n            const res = await axios.get(`${this.url}/users/${uid}/movements?page=${page}`, {\n                headers: { \"Authorization\": `Bearer ${token}` }\n            });\n\n            if(res.status === 200) {\n                return res.data;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async getMyMovements(token, page = \"\") {\n        try {\n            const res = await axios.get(`${this.url}/users/myMovements?page=${page}`, {\n                headers: { \"Authorization\": `Bearer ${token}` }\n            });\n\n            if(res.status === 200) {\n                return res.data;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async getCurrencyConversion() {\n        try {\n            const res = await axios.get(`${this.url}/money/conversion`);\n\n            if(res.status === 200) {\n                return res.data;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n}\n\nexport default new API();\n","import types from './action-types';\nimport ls from '../../utils/localStorage';\n\nconst saveUserInfo = (user) => {\n    ls.saveToken(user.token);\n\n    return {\n        type: types.USER_AUTHENTICATE,\n        payload: user\n    };\n}\n\nconst signout = () => {\n    ls.deleteToken();\n    ls.removeItem('_ct');\n    ls.removeItem('_pag');\n\n    return {\n        type: types.USER_SIGNOUT\n    };\n};\n\nexport default { saveUserInfo, signout };\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport LoadingScreen from 'react-loading-screen';\n\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport api from '../../../utils/api';\nimport coreActions from '../../../store/core/actions';\n\nimport './login.scss';\n\n// Timmothy55@gmail.com\n\nconst Login = ({ admin, saveUserInfo }) => {\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const { t } = useTranslation();\n    const history = useHistory();\n\n    const label = admin ? t('adminlogin.label') : t('clientlogin.label');\n    const labelBottom = admin ? t('clientq.label') : t('adminq.label');\n    const loginURL = admin ? \"/login\" : \"/admin/login\"; \n\n    let userRef, passRef = null;\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit();\n        }\n    };\n\n    const handleSubmit = async () => {\n        setLoading(true);\n        const user = userRef.value, pass = passRef.value;\n\n        if(user !== '' && pass !== '') {\n            setError(null);\n            // TODO: create client login\n            const userInfo = admin ? await api.adminLogin(user, pass) : await api.userLogin(user, pass);\n            \n            if(userInfo) {\n                saveUserInfo(userInfo);\n                if(userInfo.admin) {\n                    history.replace('/admin');\n                } else {\n                    history.replace('/mymovements');\n                }\n            } else {\n                setError(t('errorlogin2.label'));\n            }\n        } else {\n            setError(t('errorlogin.label'));\n        }\n\n        setLoading(false);\n    }\n\n    return(\n        <>\n            <LoadingScreen\n                loading={loading}\n                bgColor='#282c34'\n                spinnerColor='#9ee5f8'\n                textColor='#fff'\n                text={ t('wait.label') }\n            /> \n            <Form.Group className=\"login\">\n                <h3>{ label }</h3>\n                <Form.Control ref={input => userRef = input} onKeyDown={handleKeyDown} size=\"lg\" type=\"text\" autoComplete=\"off\" placeholder={admin ? t('user.label') : \"Email\"} />\n                <Form.Control ref={input => passRef = input} onKeyDown={handleKeyDown} size=\"lg\" type=\"password\" autoComplete=\"off\" placeholder={t('password.label')} />\n                <div className=\"error-message\">\n                    { error && \n                        <><FontAwesomeIcon icon={faExclamationCircle} /> {error}</>\n                    }\n                </div>\n                <div className=\"login-bottom\">\n                    <Button variant=\"secondary\" onClick={handleSubmit}>{ t('submit.label') }</Button>\n                    <Link to={loginURL}>{ labelBottom }</Link>\n                </div>\n            </Form.Group>\n        </>\n    );\n};\n\nconst mapStateToProps = ({ core }) => {\n    return {\n        core\n    };\n}\n\nexport default connect(mapStateToProps, coreActions)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport CoreActions from '../../../store/core/actions';\n\nconst SignOut = ({ signout }) => {\n    signout();\n\n    return (\n        <Redirect to=\"/login\" />\n    )\n};\n\nconst mapStateToProps = () => {\n    return {};\n}\n\nexport default connect(mapStateToProps, CoreActions)(SignOut);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Protected = ({ isAuthenticated, isClient, children, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isAuthenticated && isClient ? (\n                children\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: location }\n                    }}\n                />\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = ({ core }) => {\n    return {\n        isAuthenticated: core.isAuthenticated,\n        isClient: !core.user.admin\n    };\n}\n\nexport default connect(mapStateToProps)(Protected);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst ProtectedAdmin = ({ isAuthenticated, isAdmin, children, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isAuthenticated && isAdmin ? (\n                children\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/admin/login\",\n                        state: { from: location }\n                    }}\n                />\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = ({ core }) => {\n    return {\n        isAuthenticated: core.isAuthenticated,\n        isAdmin: core.user ? core.user.admin : false\n    };\n}\n\nexport default connect(mapStateToProps)(ProtectedAdmin);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst CheckRedirect = ({ isAuthenticated, isAdmin }) => {\n    return (\n        isAuthenticated ? (\n            isAdmin ? (\n                <Redirect to=\"/admin\" />\n            ) : (\n                <Redirect to=\"/mymovements\" />\n            )\n        ) : <Redirect to=\"/login\" />\n    );\n};\n\nconst mapStateToProps = ({ core }) => {\n    return {\n        isAuthenticated: core.isAuthenticated,\n        isAdmin: core.user ? core.user.admin : false\n    }\n};\n\nexport default connect(mapStateToProps)(CheckRedirect);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst CheckSession = ({ isAuthenticated, isAdmin, children, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isAuthenticated ? (\n                    isAdmin ? (\n                        <Redirect to=\"/admin\" />\n                    ) : (\n                        <Redirect to=\"/mymovements\" />\n                    )\n                ) : children\n            }\n        />\n    );\n};\n\nconst mapStateToProps = ({ core }) => {\n    return {\n        isAuthenticated: core.isAuthenticated,\n        isAdmin: core.user ? core.user.admin : false\n    }\n};\n\nexport default connect(mapStateToProps)(CheckSession);\n","import jwt from 'jwt-simple';\n\nimport types from './action-types';\nimport ls from '../../utils/localStorage';\n\nconst secret = \"fe1a1915a379f3be5394b64d14794932\";\n\nconst saveCurrentInfo = (info) => {\n    ls.setItem('_ct', jwt.encode(info.records, secret));\n    ls.setItem('_pag', jwt.encode(info.pagination, secret));\n\n    return {\n        type: types.SAVE_CURRENT_INFO,\n        payload: info\n    };\n};\n\nexport default { saveCurrentInfo };\n","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { Link } from 'react-router-dom';\n\nconst Pag = ({ page, totalPages, options }) => {\n    if(page === 0) {\n        return null\n    }\n\n\n    const { path } = options;\n\n    return (\n        <Pagination>\n            { page > 1 ? (\n                <>\n                    { page > 2 ? (\n                        <>\n                            <Pagination.Item as=\"span\"><Link to={`${path}/1`}>1</Link></Pagination.Item>\n                            { page > 3 ? (\n                                <Pagination.Ellipsis />\n                            ) : null}\n                        </>\n                    ) : null}\n                    <Pagination.Item><Link to={`${path}/${ page - 1 }`}>{ page - 1 }</Link></Pagination.Item>\n                </>\n            ) : null }\n\n            <Pagination.Item active>{ page }</Pagination.Item>\n\n            { page < totalPages ? (\n                <>\n                    <Pagination.Item><Link to={`${path}/${ page + 1 }`}>{ page + 1 }</Link></Pagination.Item>\n                    { page < totalPages - 1 ? (\n                        <>\n                            { page < totalPages - 2 ? (\n                                <Pagination.Ellipsis />\n                            ) : null }\n                            <Pagination.Item><Link to={`${path}/${ totalPages }`}>{ totalPages }</Link></Pagination.Item>\n                        </>\n                    ) : null}\n                </>\n            ) : null }\n        </Pagination>\n    );\n\n\n};\n\nexport default Pag;\n","import React from 'react';\n\nimport Table from 'react-bootstrap/Table';\nimport { faLongArrowAltDown, faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ReTable = ({ columns, content, options }) => {\n    const { order } = options;\n    const { t } = useTranslation();\n\n    const thead = columns.map((item) => {\n        return (<th className=\"orderBy\" onClick={item.cb ? item.cb : ()=>{}}>{ item.desc } { item.sort ? <FontAwesomeIcon size=\"xs\" icon={order === \"asc\" ? faLongArrowAltDown : faLongArrowAltUp} /> : null }</th>);\n    });\n\n    const numberWithCommas = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    const checkItem = (item) => {\n        if(item.yesno) {\n            return item.value ? t('yes.label') : \"No\";\n        }\n\n        if(item.url) {\n            return <Link to={item.url}>{item.value}</Link>;\n        }\n\n        if(item.dc) {\n            return item.value === \"credit\" ? t('credit.label') : t('debit.label')\n        }\n\n        if(item.amount) {\n            return <i>{ `$ ${numberWithCommas(item.value)} ${item.currency}` }</i>\n        }\n\n        if(item.date) {\n            const date = new Date(item.value);\n            const dd = date.getDate();\n            const mm = date.getMonth() + 1;\n            const yy = date.getFullYear();\n            \n            return `${dd}/${mm}/${yy}`;\n        }\n\n        return item;\n    }\n\n    const tbody = content.map((item, index) => {\n            return (\n                <tr key={index}>\n                    { Object.keys(item).map((it) => {\n                        return <td>{ checkItem(item[it]) }</td>;\n                    }\n                    )}\n                </tr>\n            );\n        });\n\n    return (\n        <Table responsive striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                    { thead }\n                </tr>\n            </thead>\n            <tbody>\n                { tbody }\n            </tbody>\n        </Table>\n    );\n};\n\nexport default ReTable;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from \"react-router-dom\";\nimport LoadingScreen from 'react-loading-screen';\n\nimport api from '../../utils/api';\nimport ls from '../../utils/localStorage';\nimport CurrentActions from '../../store/current/actions';\nimport Pagination from '../table/pagination';\nimport Table from '../table';\n\nimport './admin.scss';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nconst Admin = ({ saveCurrentInfo}) => {\n    const { t } = useTranslation();\n    let { p } = useParams();\n    p = !Number.isNaN(Number(p)) ? p : 1;\n\n    const [page, setPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [clients, setClients] = useState();\n\n    const updateTable = async () => {\n        const userList = await api.getUserList(ls.token, p);\n        if(userList) {\n            const cl = userList.records.map((item) => {\n                return {\n                    name: { \n                        value: `${item.nombre} ${item.segundo_nombre} ${item.apellido} ${item.segundo_apellido}`,\n                        url: `/admin/client/${item.uid}`\n                    },\n                    email: item.email,\n                    active: {\n                        value: item.active,\n                        yesno: true\n                    }\n                }\n            });\n\n            setPage(userList.pagination.page);\n            setTotalPages(userList.pagination.totalPages);\n\n            saveCurrentInfo(userList);\n\n            return [...cl]\n        }\n\n        return null;\n    }\n\n    useEffect(() => {\n        const fetchClients = async () => {\n            const clients = await updateTable();\n            setClients(clients);\n        }\n\n        fetchClients();\n    }, [p]);\n\n    const handleSort = (key) => {\n        const sortedArray = clients.sort((a, b) => {\n            if(key === \"email\") {\n                if (a[key] < b[key]) {\n                    return order === \"desc\" ? -1 : 1;\n                }\n                if (a[key] > b[key]) {\n                    return order === \"desc\" ? 1 : -1;\n                }\n            }\n\n            if (a[key].value < b[key].value) {\n                return order === \"desc\" ? -1 : 1;\n            }\n            if (a[key].value > b[key].value) {\n                return order === \"desc\" ? 1 : -1;\n            }\n\n            return 0;\n        });\n\n        setClients(sortedArray);\n        setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n    }\n\n    const columns = [\n        {\n            desc: t('name.label'),\n            sort: true,\n            cb: () => handleSort(\"name\")\n        },\n        {\n            desc: \"Email\",\n            sort: true,\n            cb: () => handleSort(\"email\")\n        },\n        {\n            desc: t('active.label'),\n            sort: true,\n            cb: () => handleSort(\"active\")\n        }\n    ];\n\n    return (\n        <div className=\"user-list-wrapper\">\n            { clients ? (\n                <>\n                    <Table columns={columns} content={clients} options={{order}} />\n                    <Pagination page={page} totalPages={totalPages} options={{ path: '/admin/p' }} />\n                </>\n            ) : (\n                <LoadingScreen\n                    loading={true}\n                    bgColor='#282c34'\n                    spinnerColor='#9ee5f8'\n                    textColor='#fff'\n                    text={ t('wait.label') }\n                /> \n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ current }) => {\n    return {\n        current\n    }\n}\n\nexport default connect(mapStateToProps, CurrentActions)(Admin);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport LoadingScreen from 'react-loading-screen';\n\nimport Button from 'react-bootstrap/Button';\n\nimport api from '../../utils/api';\nimport ls from '../../utils/localStorage';\nimport Table from '../table';\nimport Pagination from '../table/pagination';\nimport CurrentActions from '../../store/current/actions';\n\nimport './client.scss';\n\nconst Client = ({ saveCurrentInfo }) => {\n    let { p } = useParams();\n    const { t } = useTranslation();\n    \n    const [movements, setMovements] = useState();\n    const [page, setPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [currency, setCurrency] = useState('usd');\n    const [client, setClient] = useState({});\n\n    p = !Number.isNaN(Number(p)) ? p : 1;\n\n    const fetchClientMovements = async () => {\n        const mov = await api.getMyMovements(ls.token, p);\n        if(mov) {\n            const currency = await api.getCurrencyConversion();\n\n            const m = mov.records.map((item) => {\n                return {\n                    amount: {\n                        amount: true,\n                        value: item.amount,\n                        mxn: currency ? (item.amount * currency.usd2mxn).toFixed(2) : item.amount,\n                        usd: item.amount,\n                        currency: \"USD\"\n                    },\n                    type: {\n                        dc: true,\n                        value: item.type\n                    },\n                    description: item.description,\n                    date: {\n                        date: true,\n                        value: item.created_at\n                    }\n                }\n            });\n\n            const userInfo = ls.getUserInfo();\n\n            setClient(userInfo);\n            setPage(mov.pagination.page);\n            setTotalPages(mov.pagination.totalPages);\n            setMovements(m);\n            setCurrency(\"usd\");\n\n            saveCurrentInfo(mov);\n        }\n    };\n\n    useEffect(() => {\n        fetchClientMovements();\n    }, [p]);\n\n    const handleSort = (key) => {\n        const sortedArray = movements.sort((a, b) => {\n            if(key === \"description\") {\n                if (a[key] < b[key]) {\n                    return order === \"desc\" ? -1 : 1;\n                }\n                if (a[key] > b[key]) {\n                    return order === \"desc\" ? 1 : -1;\n                }\n            }\n\n            if (a[key].value < b[key].value) {\n                return order === \"desc\" ? -1 : 1;\n            }\n            if (a[key].value > b[key].value) {\n                return order === \"desc\" ? 1 : -1;\n            }\n            return 0;\n        });\n\n        setMovements(sortedArray);\n        setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n    }\n\n    const columns = [\n        {\n            desc: t('amount.label'),\n            sort: true,\n            cb: () => handleSort('amount')\n        },\n        {\n            desc: t('type.label'),\n            sort: true,\n            cb: () => handleSort('type')\n        },\n        {\n            desc: t('description.label'),\n            sort: true,\n            cb: () => handleSort('description')\n        },\n        {\n            desc: t('date.label'),\n            sort: true,\n            cb: () => handleSort('date')\n        }\n    ];\n\n    const changeCurrency = () => {\n        const newArray = movements.map((item) => {\n            if(currency === \"usd\") {\n                return {...item, amount: {\n                    ...item.amount,\n                    value: item.amount.mxn,\n                    currency: \"MXN\"\n                }};\n            }\n            if(currency === \"mxn\") {\n                return {...item, amount: {\n                    ...item.amount,\n                    value: item.amount.usd,\n                    currency: \"USD\"\n                }};\n            }\n\n            return item;\n        });\n\n        setMovements(newArray);\n        setCurrency(currency === \"usd\" ? \"mxn\" : \"usd\");\n    };\n\n    return (\n        <div className=\"admin-client-info-wrapper\">\n            { movements ? (\n                <>\n                    <h2> { t('name.label') }: { client.nombre } { client.apellido } { client.segundo_apellido }</h2>\n                    <p><i>Email: { client.email }</i></p>\n                    <br />\n                    <Table columns={columns} content={movements} options={{ order }} />\n                    <span>\n                        <Pagination page={page} totalPages={totalPages} options={{ path: `/mymovements/p` }} />\n                        <Button type=\"button\" size=\"sm\" variant=\"dark\" onClick={changeCurrency}>\n                            <i>{ currency === \"usd\" ? 'USD → MXN' : \"MXN → USD\"}</i>\n                        </Button>\n                    </span>\n                </>\n            ) : (\n                <LoadingScreen\n                    loading={true}\n                    bgColor='#282c34'\n                    spinnerColor='#9ee5f8'\n                    textColor='#fff'\n                    text={ t('wait.label') }\n                /> \n            ) }\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ current }) => {\n    return {\n        records: current.records,\n        pagination: current.pagination\n    }\n};\n\nexport default connect(mapStateToProps, CurrentActions)(Client);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport LoadingScreen from 'react-loading-screen';\n\nimport Button from 'react-bootstrap/Button';\n\nimport api from '../../../utils/api';\nimport ls from '../../../utils/localStorage';\nimport Table from '../../table';\nimport Pagination from '../../table/pagination';\n\nimport './client.scss';\n\nconst Client = ({ records }) => {\n    let { p } = useParams();\n    const { uid } = useParams();\n    const { t } = useTranslation();\n    const { history } = useHistory();\n\n    // ! The api is not returning a jwt token for the client in the headers, \n    // ! that's why I need to look for their info in the past api call for the users list.\n    // ! And that's the reason I need to store the records in localStorage\n    const client = records.find((item) => {\n        return item.uid === uid;\n    });\n\n    if(!client) {\n        history.replace('/admin');\n    }\n    \n    const [movements, setMovements] = useState();\n    const [page, setPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [currency, setCurrency] = useState('usd');\n\n    p = !Number.isNaN(Number(p)) ? p : 1;\n    const loading = t('loading.label');\n\n    const fetchClientMovements = async () => {\n        const mov = await api.getClientMovements(ls.token, uid, p);\n        if(mov) {\n            const currency = await api.getCurrencyConversion();\n\n            const m = mov.records.map((item) => {\n                return {\n                    amount: {\n                        amount: true,\n                        value: item.amount,\n                        mxn: currency ? (item.amount * currency.usd2mxn).toFixed(2) : item.amount,\n                        usd: item.amount,\n                        currency: \"USD\"\n                    },\n                    type: {\n                        dc: true,\n                        value: item.type\n                    },\n                    description: item.description,\n                    date: {\n                        date: true,\n                        value: item.created_at\n                    }\n                }\n            });\n\n            setPage(mov.pagination.page);\n            setTotalPages(mov.pagination.totalPages);\n            setMovements(m);\n            setCurrency(\"usd\");\n        }\n    };\n\n    useEffect(() => {\n        fetchClientMovements();\n    }, [p]);\n\n    const handleSort = (key) => {\n        const sortedArray = movements.sort((a, b) => {\n            if(key === \"description\") {\n                if (a[key] < b[key]) {\n                    return order === \"desc\" ? -1 : 1;\n                }\n                if (a[key] > b[key]) {\n                    return order === \"desc\" ? 1 : -1;\n                }\n            }\n\n            if (a[key].value < b[key].value) {\n                return order === \"desc\" ? -1 : 1;\n            }\n            if (a[key].value > b[key].value) {\n                return order === \"desc\" ? 1 : -1;\n            }\n            return 0;\n        });\n\n        setMovements(sortedArray);\n        setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n    }\n\n    const columns = [\n        {\n            desc: t('amount.label'),\n            sort: true,\n            cb: () => handleSort('amount')\n        },\n        {\n            desc: t('type.label'),\n            sort: true,\n            cb: () => handleSort('type')\n        },\n        {\n            desc: t('description.label'),\n            sort: true,\n            cb: () => handleSort('description')\n        },\n        {\n            desc: t('date.label'),\n            sort: true,\n            cb: () => handleSort('date')\n        }\n    ];\n\n    const changeCurrency = () => {\n        const newArray = movements.map((item) => {\n            if(currency === \"usd\") {\n                return {...item, amount: {\n                    ...item.amount,\n                    value: item.amount.mxn,\n                    currency: \"MXN\"\n                }};\n            }\n            if(currency === \"mxn\") {\n                return {...item, amount: {\n                    ...item.amount,\n                    value: item.amount.usd,\n                    currency: \"USD\"\n                }};\n            }\n\n            return item;\n        });\n\n        setMovements(newArray);\n        setCurrency(currency === \"usd\" ? \"mxn\" : \"usd\");\n    };\n\n    return (\n        <div className=\"admin-client-info-wrapper\">\n            { movements ? (\n                <>\n                    <h2> { client.nombre } { client.apellido } { client.segundo_apellido }</h2>\n                    <p><i>{ client.email }</i></p>\n                    <br />\n                    <Table columns={columns} content={movements} options={{ order }} />\n                    <span>\n                        <Pagination page={page} totalPages={totalPages} options={{ path: `/admin/client/${uid}/p` }} />\n                        <Button type=\"button\" size=\"sm\" variant=\"dark\" onClick={changeCurrency}>\n                            <i>{ currency === \"usd\" ? 'USD → MXN' : \"MXN → USD\"}</i>\n                        </Button>\n                    </span>\n                </>\n            ) : (\n                <LoadingScreen\n                    loading={true}\n                    bgColor='#282c34'\n                    spinnerColor='#9ee5f8'\n                    textColor='#fff'\n                    text={ t('wait.label') }\n                /> \n            ) }\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ current }) => {\n    return {\n        records: current.records,\n        pagination: current.pagination\n    }\n};\n\nexport default connect(mapStateToProps)(Client);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Menu } from './components';\nimport Login from './components/session/login';\nimport SignOut from './components/session/signout';\nimport Protected from './components/protected';\nimport ProtectedAdmin from './components/protected/admin';\nimport CheckRedirect from './components/protected/checkRedirect';\nimport CheckSession from './components/protected/checkSession';\nimport Admin from './components/admin';\nimport Client from './components/client';\nimport ClientAdmin from './components/admin/client';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <Router>\n      <Menu />\n      <div className=\"App\">\n        <Switch>\n          <ProtectedAdmin exact path=\"/admin\" >\n            <Admin />\n          </ProtectedAdmin>\n          <ProtectedAdmin exact path=\"/admin/p\" >\n            <Admin />\n          </ProtectedAdmin>\n          <ProtectedAdmin path=\"/admin/p/:p\" >\n            <Admin />\n          </ProtectedAdmin>\n          <ProtectedAdmin exact path=\"/admin/client\" >\n            <ClientAdmin />\n          </ProtectedAdmin>\n          <ProtectedAdmin exact path=\"/admin/client/:uid\" >\n            <ClientAdmin />\n          </ProtectedAdmin>\n          <ProtectedAdmin exact path=\"/admin/client/:uid/p/:p\" >\n            <ClientAdmin />\n          </ProtectedAdmin>\n          \n          <Protected exact path=\"/mymovements\" >\n            <Client />\n          </Protected>\n          <Protected exact path=\"/mymovements/p/:p\" >\n            <Client />\n          </Protected>\n\n          <CheckSession path=\"/admin/login\">\n            <Login admin={true} />\n          </CheckSession>\n          <CheckSession path=\"/login\">\n            <Login />\n          </CheckSession>\n          <Route path=\"/signout\" >\n            <SignOut />\n          </Route>\n\n          <Route exact path=\"/\">\n            <CheckRedirect />\n          </Route>\n\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './i18n';\nimport store from './store';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Suspense fallback={null}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </Suspense>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}